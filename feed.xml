<?xml version='1.0' encoding='UTF-8'?>
<rss version='2.0' xmlns:atom='http://www.w3.org/2005/Atom'>
<channel>
<atom:link href='http://blogawesome.com/' rel='self' type='application/rss+xml'/>
<generator>
clj-rss
</generator>
<title>
만명 블로그
</title>
<link>
http://blogawesome.com/
</link>
<description>
This blog is awesome
</description>
<lastBuildDate>
Fri, 16 Jan 2015 10:25:37 +0900
</lastBuildDate>
<author>
Manmyung Kim
</author>
<item>
<guid>
http://blogawesome.com/posts/2015-01-16-post.html
</guid>
<link>
http://blogawesome.com/posts/2015-01-16-post.html
</link>
<title>
블로그 엔진 교체
</title>
<description>
&lt;p&gt;블로그 엔진을 Jekyll에서 Cryogen으로 바꿨다. 클로저로 만들어져 있어서 공부하는데 좋기 때문이다. 디자인 구현이 부트스트랩인 것도 마음에 들었다. 또한 'Web Development with Clojure' 책 저자가 바꿨다는 &lt;a href='http://yogthos.net/posts/2014-11-26-Moving-to-Cryogen.html'&gt;소식&lt;/a&gt;을 듣고 뽐뿌. &lt;/p&gt;&lt;p&gt;배포 서버로 Github Pages를 사용한다면 설치방법은 이렇다.&lt;/p&gt;&lt;h2&gt;&lt;a name=&quot;github&amp;#95;pages만들기&quot;&gt;&lt;/a&gt;Github Pages만들기&lt;/h2&gt;&lt;a href=&quot;https://pages.github.com/&quot;&gt;https://pages.github.com/&lt;/a&gt; 에서 1,2번만 따라함.&lt;p&gt;&lt;code&gt;git clone https://github.com/아이디/아이디.github.io.git&lt;/code&gt;&lt;/p&gt;&lt;h2&gt;&lt;a name=&quot;로컬에&amp;#95;cryogen&amp;#95;설치&quot;&gt;&lt;/a&gt;로컬에 Cryogen 설치&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;lein new cryogen 아이디.github.io --force &amp;#40;참고: 이미 있는 directory이므로 --force 사용&amp;#41;
cd 아이디.github.io
lein ring server
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;그러면 &lt;code&gt;http://localhost:3000/&lt;/code&gt; 에서 볼 수 있다.&lt;/p&gt;&lt;h2&gt;&lt;a name=&quot;글&amp;#95;쓰기&quot;&gt;&lt;/a&gt;글 쓰기&lt;/h2&gt;&lt;code&gt;resources/templates/md/posts&lt;/code&gt; 디렉토리의 md 파일들을 참고하여 새로운 md 파일 추가.&lt;h2&gt;&lt;a name=&quot;github&amp;#95;pages에&amp;#95;배포&quot;&gt;&lt;/a&gt;Github Pages에 배포&lt;/h2&gt;&lt;code&gt;templates/config.edn&lt;/code&gt; 에서 &lt;code&gt;:blog-prefix&lt;/code&gt;를 &lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt; 로 세팅.&lt;p&gt;&lt;code&gt;.gitignore&lt;/code&gt;에 &lt;code&gt;/resources/public/&lt;/code&gt; 추가.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;cd 아이디.github.io
cp -r resources/public/&amp;#42; .
git add --all .
git commit -m '블라블라'
git push
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;그러면 &lt;code&gt;http://아이디.github.io/&lt;/code&gt; 에서 볼 수 있다.&lt;/p&gt;&lt;h2&gt;&lt;a name=&quot;참고&quot;&gt;&lt;/a&gt;참고&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://cryogenweb.org/docs/getting-started.html&quot;&gt;http://cryogenweb.org/docs/getting-started.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://cryogenweb.org/docs/writing-posts.html&quot;&gt;http://cryogenweb.org/docs/writing-posts.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://cryogenweb.org/docs/deploying-to-github-pages.html&quot;&gt;http://cryogenweb.org/docs/deploying-to-github-pages.html&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
</description>
<pubDate>
Fri, 16 Jan 2015 00:00:00 +0900
</pubDate>
<author>
Manmyung Kim
</author>
</item>
<item>
<guid>
http://blogawesome.com/posts/2015-01-15-post.html
</guid>
<link>
http://blogawesome.com/posts/2015-01-15-post.html
</link>
<title>
Cordova로 만드는 안드로이드 앱에서 스플래시 화면 구현
</title>
<description>
&lt;p&gt;Cordova를 이용하여 만들고 있는 안드로이드 앱의 초기 로딩시간이 5초 정도다. 5초 동안 검은 화면으로 나오면 사용자 입장에서는 혼동이 된다. 그래서 초기 화면인 스플래시 화면이 필요하게 되었다. 이렇게 시작된 일이 다양한 문제 때문에 하루종일 걸렸다.&lt;/p&gt;&lt;h2&gt;&lt;a name=&quot;스플래시&amp;#95;화면&amp;#95;띄우기&quot;&gt;&lt;/a&gt;스플래시 화면 띄우기&lt;/h2&gt;Cordova 공식 페이지의 &lt;a href='http://cordova.apache.org/docs/en/4.0.0/config&amp;#95;ref&amp;#95;images.md.html#Icons%20and%20Splash%20Screens'&gt;이곳&lt;/a&gt;에 스플래시 화면 만드는 방법이 나와 있다. 그러나 빠진 내용이 있어서 몇 시간 삽질. 빠진 내용은 이것이다.&lt;p&gt;&lt;code&gt;&amp;lt;preference name=&amp;quot;SplashScreen&amp;quot; value=&amp;quot;screen&amp;quot;/&amp;gt;&lt;/code&gt;&lt;/p&gt;&lt;p&gt;즉 config.xml 파일에 추가할 부분은 위 문장을 포함하여 다음과 같다.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;platform name=&amp;quot;android&amp;quot;&amp;gt;
    &amp;lt;splash src=&amp;quot;res/splash-land-hdpi.png&amp;quot; density=&amp;quot;land-hdpi&amp;quot;/&amp;gt;
    &amp;lt;splash src=&amp;quot;res/splash-land-ldpi.png&amp;quot; density=&amp;quot;land-ldpi&amp;quot;/&amp;gt;
    &amp;lt;splash src=&amp;quot;res/splash-land-mdpi.png&amp;quot; density=&amp;quot;land-mdpi&amp;quot;/&amp;gt;
    &amp;lt;splash src=&amp;quot;res/splash-land-xhdpi.png&amp;quot; density=&amp;quot;land-xhdpi&amp;quot;/&amp;gt;

    &amp;lt;splash src=&amp;quot;res/splash-port-hdpi.png&amp;quot; density=&amp;quot;port-hdpi&amp;quot;/&amp;gt;
    &amp;lt;splash src=&amp;quot;res/splash-port-ldpi.png&amp;quot; density=&amp;quot;port-ldpi&amp;quot;/&amp;gt;
    &amp;lt;splash src=&amp;quot;res/splash-port-mdpi.png&amp;quot; density=&amp;quot;port-mdpi&amp;quot;/&amp;gt;
    &amp;lt;splash src=&amp;quot;res/splash-port-xhdpi.png&amp;quot; density=&amp;quot;port-xhdpi&amp;quot;/&amp;gt;
&amp;lt;/platform&amp;gt;

&amp;lt;preference name=&amp;quot;SplashScreen&amp;quot; value=&amp;quot;screen&amp;quot;/&amp;gt;
&amp;lt;preference name=&amp;quot;SplashScreenDelay&amp;quot; value=&amp;quot;20000&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;그리고 위 src 패스의 png 파일들도 추가해 준다.&lt;/p&gt;&lt;h2&gt;&lt;a name=&quot;플러그인&amp;#95;추가&quot;&gt;&lt;/a&gt;플러그인 추가&lt;/h2&gt;위의 설정만으로는 스플래시 화면이 정해진 20초 동안 나오고 사라진다. 프로그램적으로 메인 로직이 시작하는 시점에 맞춰 스플래시 화면을 없애기 위해서는 플러그인이 필요하다. 플러그인은 이 &lt;a href='https://github.com/apache/cordova-plugin-splashscreen/blob/master/doc/index.md'&gt;문서&lt;/a&gt;에 설명되어 있다. 그러나 여기에도 빠진 내용이 있어서 헤맸다.&lt;p&gt;문서대로 따라하고 추가로 html에 다음 코드를 넣는다.&lt;/p&gt;&lt;p&gt;&lt;code&gt;&amp;lt;script src=&amp;quot;plugins/org.apache.cordova.splashscreen/www/splashscreen.js&amp;quot; type=&amp;quot;text/javascript&amp;quot; charset=&amp;quot;utf-8&amp;quot; &amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/p&gt;&lt;p&gt;여기서 src 패스는 각자에 맞게 수정.&lt;/p&gt;&lt;h2&gt;&lt;a name=&quot;플러그인&amp;#95;사용&quot;&gt;&lt;/a&gt;플러그인 사용&lt;/h2&gt;위 &lt;a href='https://github.com/apache/cordova-plugin-splashscreen/blob/master/doc/index.md'&gt;문서&lt;/a&gt;에 나온대로 자바스크립트 코드에&lt;p&gt;&lt;code&gt;navigator.splashscreen.hide&amp;#40;&amp;#41;;&lt;/code&gt;&lt;/p&gt;&lt;p&gt;를 추가했지만 스플래시 화면이 안 사라지는 경우도 많았다. 원인은 아마도 splashscreen.js 의 로딩 시점 문제인 거 같다. 그래서 device ready 상태 이후에 위 코드 호출하기로 했다. 우리 회사에서 사용한 코드는 이렇다.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;document.addEventListener&amp;#40;&amp;quot;deviceready&amp;quot;, onDeviceReady, false&amp;#41;;

function onDeviceReady&amp;#40;&amp;#41; {
  블라블라
  navigator.splashscreen.hide&amp;#40;&amp;#41;;
  블라블라
}
&lt;/code&gt;&lt;/pre&gt;
</description>
<pubDate>
Thu, 15 Jan 2015 00:00:00 +0900
</pubDate>
<author>
Manmyung Kim
</author>
</item>
<item>
<guid>
http://blogawesome.com/posts/2015-01-11-post.html
</guid>
<link>
http://blogawesome.com/posts/2015-01-11-post.html
</link>
<title>
4clojure 다시 풀기
</title>
<description>
 &lt;p&gt;Clojure를 처음 시작할 때 4clojure는 좋은 공부 방법 중 하나이다. 이유는 이 &lt;a href='http://clojure.or.kr/wiki/doku.php?id=lecture:4clojure:4clojure%EA%B0%80&amp;#95;clojure&amp;#95;%EA%B3%B5%EB%B6%80%EC%97%90&amp;#95;%EC%A2%8B%EC%9D%80&amp;#95;%EC%9D%B4%EC%9C%A0'&gt;링크&lt;/a&gt;에 잘 설명되어 있다.	실제 문제를 풀다 보니 여러 클로저 문법 중에서도 자주 쓰이는 것 위주로 효과적으로 익힐 수 있다.&lt;/p&gt;&lt;p&gt;4clojure에는 4단계가 있다. Elementary, Easy, Medium, Hard. 몇달 전에 클로저를 시작하면서 Easy까지 풀었었다. 최근 4clojure를 다시 보려니 두 가지 선택이 있었다. 첫째, Medium부터 풀기. 둘째, Elementary, Easy 복습하기. 이전에 푸는 것에만 급급하여 깊이있게 정리하지 못했다는 판단으로 복습을 하기로 했다.&lt;/p&gt;&lt;p&gt;다시 풀어보는 선택이 옳았다. 두번째 보니 다른 사람의 풀이가 눈에 들어온다. maximental, chouser, daowen 이 세 사람이 특히 좋았다. 혼자 풀어서는 생각하지 못할 클로저 또는 함수형 프로그래밍의 풀이방법을 체득할 수 있었다. 그리고 풀이에 대한 생각을 메모로 적어두다 보니 뒤의 문제를 풀때 앞의 문제가 도움이 되는 경우가 많았다. &lt;/p&gt;&lt;p&gt;고등학교 때 생각이 났다. 난 실력정석은 안 풀고, 기본정석의 예제와 유제만 반복해서 풀었다. 이 방법이 상대적으로 적은 시간으로 기본 개념을 튼튼히 하는데 도움이 되었다. 고시공부를 할때 2독, 3독 하는 이유도 이런 효율성 때문일 것이다. &lt;/p&gt;&lt;p&gt;문제풀이는 &lt;a href='https://github.com/manmyung/study-4clojure/tree/master/src/study&amp;#95;4clojure'&gt;https://github.com/manmyung/study-4clojure/tree/master/src/study&amp;#95;4clojure&lt;/a&gt; 에 모아져 있다. 문제를 푼 순서는 &lt;a href='https://github.com/manmyung/study-4clojure/blob/master/log.md'&gt;https://github.com/manmyung/study-4clojure/blob/master/log.md&lt;/a&gt; 이다.&lt;/p&gt;
</description>
<pubDate>
Sun, 11 Jan 2015 00:00:00 +0900
</pubDate>
<author>
Manmyung Kim
</author>
</item>
<item>
<guid>
http://blogawesome.com/posts/2015-01-04-post.html
</guid>
<link>
http://blogawesome.com/posts/2015-01-04-post.html
</link>
<title>
Github Pages와 Jekyll를 이용하여 블로그 만들기
</title>
<description>
&lt;h2&gt;&lt;a name=&quot;github&amp;#95;repository&amp;#95;만들기&quot;&gt;&lt;/a&gt;Github repository 만들기&lt;/h2&gt;https://pages.github.com/ 에서 1,2번만 따라한다.&lt;h2&gt;&lt;a name=&quot;jekyll&amp;#95;설치&quot;&gt;&lt;/a&gt;Jekyll 설치&lt;/h2&gt;https://help.github.com/articles/using-jekyll-with-pages/ 에서 installing-jekyll 까지만 따라한다.&lt;h2&gt;&lt;a name=&quot;로컬에서&amp;#95;블로그&amp;#95;확인&quot;&gt;&lt;/a&gt;로컬에서 블로그 확인&lt;/h2&gt;&lt;code&gt;cd 사용자이름.github.io&lt;/code&gt;&lt;p&gt;&lt;code&gt;jekyll serve --watch&lt;/code&gt;&lt;/p&gt;&lt;p&gt;브라우저에서 &lt;code&gt;http://localhost:4000/&lt;/code&gt; 연다.&lt;/p&gt;&lt;h2&gt;&lt;a name=&quot;블로그&amp;#95;첫&amp;#95;페이지&amp;#95;바꾸기&quot;&gt;&lt;/a&gt;블로그 첫 페이지 바꾸기&lt;/h2&gt;&lt;code&gt;&amp;#95;config.yml&lt;/code&gt; 파일 수정&lt;h2&gt;&lt;a name=&quot;새&amp;#95;포스트&amp;#95;추가&quot;&gt;&lt;/a&gt;새 포스트 추가&lt;/h2&gt;&lt;code&gt;&amp;#95;posts&lt;/code&gt; 디렉토리에 &lt;code&gt;YYYY-MM-DD-name-of-post.md&lt;/code&gt; 파일 만든다.&lt;p&gt;&lt;code&gt;YYYY-MM-DD-name-of-post.md&lt;/code&gt; 파일에 다음 형식으로 내용 추가&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;txt&quot;&gt;---
layout: post
title: 블라블라
---
블라블라
&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;a name=&quot;블로그&amp;#95;올리기&quot;&gt;&lt;/a&gt;블로그 올리기&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;git add .
git commit -m '블라블라'
git push
&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;a name=&quot;올린&amp;#95;블로그&amp;#95;확인&quot;&gt;&lt;/a&gt;올린 블로그 확인&lt;/h2&gt;브라우저에서 &lt;code&gt;http://사용자이름&amp;#40;예:manmyung&amp;#41;.github.io&lt;/code&gt; 연다.
</description>
<pubDate>
Sun, 04 Jan 2015 00:00:00 +0900
</pubDate>
<author>
Manmyung Kim
</author>
</item>
</channel>
</rss>
